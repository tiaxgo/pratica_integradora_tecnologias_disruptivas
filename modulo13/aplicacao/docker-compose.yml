services:
  backend:
    build:
      context: ./  # Diretório atual
      dockerfile: dockerfiles/Dockerfile.Spring.Boot-FUNCIONANDO
    container_name: backend
    ports:
      - "18080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db_postgresql:5432/bd_projeto_integrado
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password-bd-projeto-integrado
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    depends_on:
      db_postgresql:
        condition: service_healthy
    networks:
      - projeto-integrado-network

  frontend:
    build:
      context: ./  # Diretório atual
      dockerfile: dockerfiles/Dockerfile.React
    container_name: frontend
    ports:
      - "13000:3000"
    networks:
      - projeto-integrado-network

  db_postgresql:
    image: 'postgres:13.1-alpine'
    container_name: db_postgresql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password-bd-projeto-integrado
      - POSTGRES_DB=bd_projeto_integrado
    ports:
      - "25432:5432"
    volumes:
      - ./bancodedados/data:/var/lib/postgresql/data
      - ./bancodedados/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - projeto-integrado-network

networks:
  projeto-integrado-network:
    driver: bridge
